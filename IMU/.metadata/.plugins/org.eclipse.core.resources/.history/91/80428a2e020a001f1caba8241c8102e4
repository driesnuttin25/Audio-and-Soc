#include "xiic.h"
#include "xil_printf.h"
#include "xparameters.h"

#define ADXL345_ADDR 0x1D  // Or 0x1D if ALT address is used
#define DEVICE_ID_REG 0x00

XIic IicInstance;

void initI2C() {
    XIic_Config *Config = XIic_LookupConfig(XPAR_IIC_0_DEVICE_ID);
    if (Config == NULL) {
        xil_printf("No config found for I2C device\r\n");
        return;
    }
    int Status = XIic_CfgInitialize(&IicInstance, Config, Config->BaseAddress);
    if (Status != XST_SUCCESS) {
        xil_printf("Initialization failed\r\n");
        return;
    }
    XIic_Reset(&IicInstance);
    XIic_SetAddress(&IicInstance, XII_ADDR_TO_SEND_TYPE, ADXL345_ADDR);
}

u8 readDeviceID() {
    u8 regAddress = DEVICE_ID_REG;
    u8 deviceID = 0;
    int Status;

    Status = XIic_MasterSend(&IicInstance, &regAddress, 1);
    if (Status != XST_SUCCESS) {
        xil_printf("Error sending device address\r\n");
        return 0;
    }

    while (XIic_IsIicBusy(&IicInstance));

    Status = XIic_MasterRecv(&IicInstance, &deviceID, 1);
    if (Status != XST_SUCCESS) {
        xil_printf("Error receiving data\r\n");
        return 0;
    }

    return deviceID;
}

int main() {
    init_platform();
    initI2C();
    u8 deviceID = readDeviceID();
    xil_printf("Device ID: 0x%02x\r\n", deviceID);
    cleanup_platform();
    return 0;
}
